apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-todo-config
  namespace: default
data:
  POSTGRES_DB: "todoapp"
  POSTGRES_USER: "todouser"

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-todo-secret
  namespace: default
type: Opaque
data:
  POSTGRES_PASSWORD: dG9kb3Bhc3N3b3Jk  # base64: todopassword

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-todo-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-todo
  namespace: default
  labels:
    app: postgres-todo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-todo
  template:
    metadata:
      labels:
        app: postgres-todo
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5432
        envFrom:
        - configMapRef:
            name: postgres-todo-config
        - secretRef:
            name: postgres-todo-secret
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "todouser", "-d", "todoapp"]
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "todouser", "-d", "todoapp"]
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-todo-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-todo
  namespace: default
  labels:
    app: postgres-todo
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres-todo