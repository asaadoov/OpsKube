name: Deploy Applications to k8s

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build and Deploy Applications
    runs-on: k8s

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and Push Docker Images
      run: |
        for service in auth-service todo-service api-gateway frontend; do
          echo "Building $service..."
          docker build -t asaadballa/$service:latest $service
          docker push asaadballa/$service:latest
        done

    - name: Check Database Connectivity
      run: |
        echo "Checking if PostgreSQL databases are available..."
        
        # Check if postgres-auth service exists
        if ! kubectl get service postgres-auth; then
          echo "‚ùå postgres-auth service not found!"
          echo "Please deploy PostgreSQL databases manually first:"
          echo "  ./scripts/deploy-postgres-helm.sh"
          exit 1
        fi
        
        # Check if postgres-todo service exists
        if ! kubectl get service postgres-todo; then
          echo "‚ùå postgres-todo service not found!"
          echo "Please deploy PostgreSQL databases manually first:"
          echo "  ./scripts/deploy-postgres-helm.sh"
          exit 1
        fi
        
        echo "‚úÖ PostgreSQL services found"

    - name: Deploy Application Services
      run: |
        echo "Deploying application services..."
        
        # Deploy auth service
        kubectl apply -f deploy/k8s/auth-deployment.yaml
        echo "‚úÖ Auth service deployed"
        
        # Deploy todo service
        kubectl apply -f deploy/k8s/todo-deployment.yaml
        echo "‚úÖ Todo service deployed"
        
        # Deploy API gateway
        kubectl apply -f deploy/k8s/api-gateway-deployment.yaml
        echo "‚úÖ API Gateway deployed"
        
        # Deploy frontend
        kubectl apply -f deploy/k8s/frontend-deployment.yaml
        echo "‚úÖ Frontend deployed"

    - name: Wait for Application Deployments
      run: |
        echo "Waiting for deployments to be ready..."
        
        kubectl rollout status deployment/auth-service --timeout=300s
        kubectl rollout status deployment/todo-service --timeout=300s
        kubectl rollout status deployment/api-gateway --timeout=300s
        kubectl rollout status deployment/frontend --timeout=300s
        
        echo "‚úÖ All applications deployed successfully"

    - name: Verify Deployment
      run: |
        echo "=== Deployment Verification ==="
        
        echo "Pods Status:"
        kubectl get pods -o wide
        echo ""
        
        echo "Services:"
        kubectl get services
        echo ""
        
        echo "Deployments:"
        kubectl get deployments
        echo ""
        
        echo "=== Application Health Checks ==="
        
        # Wait a bit for services to be ready
        sleep 30
        
        # Check auth service health
        echo "Checking auth-service health..."
        if kubectl run health-check-auth --rm -i --restart=Never --image=curlimages/curl:latest -- curl -f http://auth-service:8001/health; then
          echo "‚úÖ Auth service is healthy"
        else
          echo "‚ö†Ô∏è Auth service health check failed"
        fi
        
        # Check todo service health
        echo "Checking todo-service health..."
        if kubectl run health-check-todo --rm -i --restart=Never --image=curlimages/curl:latest -- curl -f http://todo-service:8000/health; then
          echo "‚úÖ Todo service is healthy"
        else
          echo "‚ö†Ô∏è Todo service health check failed"
        fi
        
        # Check API gateway health
        echo "Checking api-gateway health..."
        if kubectl run health-check-gateway --rm -i --restart=Never --image=curlimages/curl:latest -- curl -f http://api-gateway:8080/health; then
          echo "‚úÖ API Gateway is healthy"
        else
          echo "‚ö†Ô∏è API Gateway health check failed"
        fi
        
        echo ""
        echo "üéâ Application deployment completed!"
        echo ""
        echo "Note: Database management is handled manually via:"
        echo "  - ./scripts/deploy-postgres-helm.sh"
        echo "  - ./scripts/manage-postgres-helm.sh"